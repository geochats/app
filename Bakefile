#!/usr/bin/env bash
# Docs: https://github.com/kyleburton/bake

set -euo pipefail

source .env
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

bake_task stage-deploy "Deploy to stage"
function stage-deploy() {
    helm upgrade geochats-stage ./kubernetes --namespace geochats-stage --values ./kubernetes/values.yaml --values ./kubernetes/values.prod.yaml --values ./kubernetes/values.stage.yaml
}

bake_task prod-deploy "Deploy to prod"
function prod-deploy() {
    if [ $# -ne 1 ]; then
        bake_echo_red "Usage: bake prod-deploy <appImageVersion>"
        exit
    fi
    helm upgrade geochats "${DIR}"/kubernetes \
      --wait \
      --namespace geochats \
      --values "${DIR}"/kubernetes/values.yaml \
      --values "${DIR}"/kubernetes/values.prod.yaml \
      --set app.imageVersion="${1}"

    echo '{"purge_everything":true}' | http \
      POST 'https://api.cloudflare.com/client/v4/zones/65e46a7ce9de1774bb6098a8b1795c3e/purge_cache' \
      "Authorization:Bearer ${CLOUDFLARE_TOKEN}"
}

bake_task local-psql "Run docker psql"
function local-psql() {
    docker run -it -e POSTGRES_PASSWORD="${DB_PASS}" -p 5432:5432 postgres
}

bake_task local-run "Run docker psql"
function local-run() {
    source .env
    migrate -path ./db -database "postgres://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable" -verbose up
    go run ./main.go
}